---
- name: Install Filebeat - AWX Template
  hosts: all
  become: yes
  gather_facts: yes

  vars:
    # Basic configuration - có thể override từ AWX Extra Variables
    elasticsearch_hosts: "{{ elasticsearch_hosts | default(['localhost:9200']) }}"
    logstash_hosts: "{{ logstash_hosts | default(['localhost:5044']) }}"
    kibana_host: "{{ kibana_host | default('localhost:5601') }}"
    filebeat_version: "{{ filebeat_version | default('8.x') }}"
    
    # Output configuration
    output_elasticsearch_enabled: "{{ output_elasticsearch_enabled | default(false) }}"
    output_logstash_enabled: "{{ output_logstash_enabled | default(true) }}"
    
    # Service configuration
    filebeat_service_state: "{{ filebeat_service_state | default('started') }}"
    filebeat_service_enabled: "{{ filebeat_service_enabled | default(true) }}"
    
    # Setup configuration
    setup_dashboards: "{{ setup_dashboards | default(true) }}"
    setup_template: "{{ setup_template | default(true) }}"
    
    # Log paths - có thể customize từ AWX
    log_paths: "{{ log_paths | default(['/var/log/*.log', '/var/log/messages', '/var/log/syslog']) }}"
    
    # Additional inputs
    enable_system_logs: "{{ enable_system_logs | default(true) }}"
    enable_nginx_logs: "{{ enable_nginx_logs | default(false) }}"
    enable_apache_logs: "{{ enable_apache_logs | default(false) }}"
    enable_docker_logs: "{{ enable_docker_logs | default(false) }}"

  tasks:
    - name: Display target information
      debug:
        msg:
          - "Target host: {{ inventory_hostname }}"
          - "OS Family: {{ ansible_os_family }}"
          - "Elasticsearch hosts: {{ elasticsearch_hosts }}"
          - "Logstash hosts: {{ logstash_hosts }}"
          - "Kibana host: {{ kibana_host }}"
          - "Output Elasticsearch: {{ output_elasticsearch_enabled }}"
          - "Output Logstash: {{ output_logstash_enabled }}"

    - name: Update package cache
      package:
        update_cache: yes
      when: ansible_os_family in ['Debian', 'RedHat']

    - name: Install prerequisites
      package:
        name:
          - curl
          - gnupg
        state: present

    - name: Add Elastic repository key (Debian/Ubuntu)
      apt_key:
        url: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present
      when: ansible_os_family == "Debian"

    - name: Add Elastic repository (Debian/Ubuntu)
      apt_repository:
        repo: "deb https://artifacts.elastic.co/packages/{{ filebeat_version }}/apt stable main"
        state: present
        update_cache: yes
      when: ansible_os_family == "Debian"

    - name: Import Elastic GPG key (RedHat/CentOS)
      rpm_key:
        key: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        state: present
      when: ansible_os_family == "RedHat"

    - name: Add Elastic repository (RedHat/CentOS)
      yum_repository:
        name: elastic
        description: Elastic {{ filebeat_version }} repository
        baseurl: https://artifacts.elastic.co/packages/{{ filebeat_version }}/yum
        gpgcheck: yes
        gpgkey: https://artifacts.elastic.co/GPG-KEY-elasticsearch
        enabled: yes
      when: ansible_os_family == "RedHat"

    - name: Install Filebeat
      package:
        name: filebeat
        state: present

    - name: Backup original configuration
      copy:
        src: /etc/filebeat/filebeat.yml
        dest: /etc/filebeat/filebeat.yml.backup
        remote_src: yes
        force: no

    - name: Create Filebeat configuration
      template:
        src: roles/ansible-role-filebeat/templates/filebeat.yml.j2
        dest: /etc/filebeat/filebeat.yml
        owner: root
        group: root
        mode: '0600'
        backup: yes
      notify: restart filebeat

    - name: Configure system log inputs
      copy:
        content: |
          filebeat.inputs:
          - type: log
            enabled: {{ enable_system_logs | lower }}
            paths:
              {% for path in log_paths %}
              - {{ path }}
              {% endfor %}
            fields:
              logtype: system
            fields_under_root: true
        dest: /etc/filebeat/inputs.d/system.yml
        mode: '0644'
      notify: restart filebeat

    - name: Check if Nginx is installed
      stat:
        path: /var/log/nginx
      register: nginx_logs

    - name: Configure Nginx log inputs
      copy:
        content: |
          filebeat.inputs:
          - type: log
            enabled: {{ (enable_nginx_logs and nginx_logs.stat.exists) | lower }}
            paths:
              - /var/log/nginx/access.log
              - /var/log/nginx/error.log
            fields:
              logtype: nginx
            fields_under_root: true
        dest: /etc/filebeat/inputs.d/nginx.yml
        mode: '0644'
      notify: restart filebeat

    - name: Check if Apache is installed
      stat:
        path: /var/log/apache2
      register: apache_logs

    - name: Configure Apache log inputs
      copy:
        content: |
          filebeat.inputs:
          - type: log
            enabled: {{ (enable_apache_logs and apache_logs.stat.exists) | lower }}
            paths:
              - /var/log/apache2/access.log
              - /var/log/apache2/error.log
              - /var/log/httpd/access_log
              - /var/log/httpd/error_log
            fields:
              logtype: apache
            fields_under_root: true
        dest: /etc/filebeat/inputs.d/apache.yml
        mode: '0644'
      notify: restart filebeat

    - name: Check if Docker is installed
      stat:
        path: /var/lib/docker
      register: docker_installed

    - name: Configure Docker log inputs
      copy:
        content: |
          filebeat.inputs:
          - type: container
            enabled: {{ (enable_docker_logs and docker_installed.stat.exists) | lower }}
            paths:
              - /var/lib/docker/containers/*/*.log
            fields:
              logtype: docker
            fields_under_root: true
        dest: /etc/filebeat/inputs.d/docker.yml
        mode: '0644'
      notify: restart filebeat

    - name: Create log directory
      file:
        path: /var/log/filebeat
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Create inputs.d directory
      file:
        path: /etc/filebeat/inputs.d
        state: directory
        owner: root
        group: root
        mode: '0755'

    - name: Start and enable Filebeat service
      systemd:
        name: filebeat
        state: "{{ filebeat_service_state }}"
        enabled: "{{ filebeat_service_enabled }}"
        daemon_reload: yes

    - name: Wait for Filebeat to start
      wait_for:
        timeout: 15

  handlers:
    - name: restart filebeat
      systemd:
        name: filebeat
        state: restarted

  post_tasks:
    - name: Validate Filebeat configuration
      command: filebeat test config
      register: config_validation
      changed_when: false
      failed_when: config_validation.rc != 0

    - name: Test output connection
      command: filebeat test output
      register: output_test
      changed_when: false
      ignore_errors: yes

    - name: Check Filebeat service status
      systemd:
        name: filebeat
      register: service_status

    - name: Setup Kibana dashboards
      command: filebeat setup --dashboards
      when: 
        - setup_dashboards | bool
        - output_test.rc == 0
        - output_elasticsearch_enabled | bool
      run_once: true
      ignore_errors: yes

    - name: Setup index template
      command: filebeat setup --template -E output.logstash.enabled=false -E 'output.elasticsearch.hosts={{ elasticsearch_hosts | to_json }}'
      when: 
        - setup_template | bool
        - output_test.rc == 0
        - output_elasticsearch_enabled | bool
      run_once: true
      ignore_errors: yes

    - name: Display installation summary
      debug:
        msg:
          - "=== FILEBEAT INSTALLATION SUMMARY ==="
          - "Configuration: {{ 'VALID' if config_validation.rc == 0 else 'INVALID' }}"
          - "Service Status: {{ service_status.status.ActiveState }}"
          - "Output Connection: {{ 'SUCCESS' if output_test.rc == 0 else 'FAILED' }}"
          - "System Logs: {{ 'ENABLED' if enable_system_logs else 'DISABLED' }}"
          - "Nginx Logs: {{ 'ENABLED' if (enable_nginx_logs and nginx_logs.stat.exists) else 'DISABLED' }}"
          - "Apache Logs: {{ 'ENABLED' if (enable_apache_logs and apache_logs.stat.exists) else 'DISABLED' }}"
          - "Docker Logs: {{ 'ENABLED' if (enable_docker_logs and docker_installed.stat.exists) else 'DISABLED' }}"
          - "Elasticsearch Output: {{ 'ENABLED' if output_elasticsearch_enabled else 'DISABLED' }}"
          - "Logstash Output: {{ 'ENABLED' if output_logstash_enabled else 'DISABLED' }}"
